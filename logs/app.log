2025-06-27 23:16:43 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:16:43 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:16:43 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:16:43 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:16:49 loglevel=INFO   logger=src.api.production_api _log_with_context() L152  Starting notes generation job notes_zxcv_4c28c010 for encounter zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:16:49 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Creating Langfuse handler for conversation_id: zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:16:49 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Langfuse handler created successfully for conversation: zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:16:49 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Initializing Medical Conversation RAG Service with AWS OpenSearch call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:16:49 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Using explicit AWS credentials from settings call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:16:50 loglevel=WARNING logger=opensearch log_request_fail() L280  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_cluster/health [status:404 request:0.612s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L280 
2025-06-27 23:16:50 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Health check endpoint not found, which is normal for AWS OpenSearch Serverless (AOSS). call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:16:50 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Skipping fallback connection test to allow startup with potentially pending IAM permissions. call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:16:50 loglevel=INFO   logger=opensearch log_request_success() L258  HEAD https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.192s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:16:50 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  OpenSearch index 'medical-conversations' already exists call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:16:50 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Medical Conversation RAG Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:16:50 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Initializing SNOMED RAG Service with Neo4j GraphRAG call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:16:50 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Neo4j GraphRAG connection established call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:16:50 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  SNOMED RAG Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:16:50 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  Initializing Medical Section Generator call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:16:50 loglevel=INFO   logger=src.services.pattern_learning _log_with_context() L152  Initializing Pattern Learning Service... call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:16:50 loglevel=INFO   logger=src.services.pattern_learning _log_with_context() L152  Pattern Learning Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:16:56 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  All medical services verified and operational call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:16:56 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  Medical Section Generator initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:16:56 loglevel=INFO   logger=src.services.notegen_api_service _log_with_context() L152  NoteGen API Integration Service initialized call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:16:57 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.690s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:16:58 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.537s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:16:58 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.196s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:16:59 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.401s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:16:59 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.179s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:16:59 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.345s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:00 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.177s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:00 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.349s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:01 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.177s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:01 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.364s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:01 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.180s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:02 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.407s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:02 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.182s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:02 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.445s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:03 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.178s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:03 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.407s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:04 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.176s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:04 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.380s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:04 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.181s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:05 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.372s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:05 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.177s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:06 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.364s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:06 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.181s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:06 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.424s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:07 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.179s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:07 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.430s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:07 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.179s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:08 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.375s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:08 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.179s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:09 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.376s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:09 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.181s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:09 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.362s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:11 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations/_search [status:200 request:0.211s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:11 loglevel=WARNING logger=src.services.conversation_rag _log_with_context() L152  Could not find a clear consent statement for conversation zxcv using LLM. call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:17:13 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Getting SNOMED mappings for 17 terms in language: en call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:17:56 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Found 43 SNOMED mappings call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:17:56 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Retrieving 10 chunks for conversation zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:17:57 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations/_search [status:200 request:1.012s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:17:57 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Retrieved 10 relevant chunks call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:17:58 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Langfuse client initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:18:07 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Medical generation metrics - conversation_id: zxcv, section_type: Subjective, generation_time: 6.94s, success: True, tokens: {} call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:18:07 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Retrieving 10 chunks for conversation zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:18:08 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations/_search [status:200 request:0.728s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:18:08 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Retrieved 10 relevant chunks call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:18:12 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Medical generation metrics - conversation_id: zxcv, section_type: Objective, generation_time: 1.73s, success: True, tokens: {} call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:18:13 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Retrieving 10 chunks for conversation zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:18:14 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations/_search [status:200 request:1.298s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:18:14 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Retrieved 10 relevant chunks call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:18:18 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Medical generation metrics - conversation_id: zxcv, section_type: Assessment, generation_time: 3.00s, success: True, tokens: {} call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:18:19 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Retrieving 10 chunks for conversation zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:18:20 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations/_search [status:200 request:0.871s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:18:20 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Retrieved 10 relevant chunks call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:18:25 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Medical generation metrics - conversation_id: zxcv, section_type: Plan, generation_time: 2.68s, success: True, tokens: {} call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:18:25 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Retrieving 10 chunks for conversation zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:18:25 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations/_search [status:200 request:0.205s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:18:25 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Retrieved 10 relevant chunks call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:19:05 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Medical generation metrics - conversation_id: zxcv, section_type: Visit - 1, generation_time: 38.79s, success: True, tokens: {} call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:19:06 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Retrieving 10 chunks for conversation zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:19:06 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations/_search [status:200 request:0.239s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:19:06 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Retrieved 10 relevant chunks call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:19:15 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Medical generation metrics - conversation_id: zxcv, section_type: Visit - 2, generation_time: 6.89s, success: True, tokens: {} call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:19:16 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Retrieving 10 chunks for conversation zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:19:16 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations/_search [status:200 request:0.226s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:19:16 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Retrieved 10 relevant chunks call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:19:23 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Medical generation metrics - conversation_id: zxcv, section_type: Section 1, generation_time: 5.45s, success: True, tokens: {} call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:19:25 loglevel=INFO   logger=src.api.production_api _log_with_context() L152  Flushing Langfuse handler for encounter zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:19:25 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:19:25 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:19:29 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:19:29 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:19:29 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:19:29 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:19:47 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:19:47 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:19:47 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:19:47 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:20:02 loglevel=INFO   logger=src.api.production_api _log_with_context() L152  Starting notes generation job notes_zxcv_1a036802 for encounter zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:20:02 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Creating Langfuse handler for conversation_id: zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:20:02 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Langfuse handler created successfully for conversation: zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:20:02 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Initializing Medical Conversation RAG Service with AWS OpenSearch call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:20:03 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Using explicit AWS credentials from settings call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:20:03 loglevel=WARNING logger=opensearch log_request_fail() L280  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_cluster/health [status:404 request:0.703s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L280 
2025-06-27 23:20:03 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Health check endpoint not found, which is normal for AWS OpenSearch Serverless (AOSS). call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:20:03 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Skipping fallback connection test to allow startup with potentially pending IAM permissions. call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:20:04 loglevel=INFO   logger=opensearch log_request_success() L258  HEAD https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.208s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:04 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  OpenSearch index 'medical-conversations' already exists call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:20:04 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Medical Conversation RAG Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:20:04 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Initializing SNOMED RAG Service with Neo4j GraphRAG call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:20:04 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Neo4j GraphRAG connection established call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:20:04 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  SNOMED RAG Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:20:04 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  Initializing Medical Section Generator call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:20:04 loglevel=INFO   logger=src.services.pattern_learning _log_with_context() L152  Initializing Pattern Learning Service... call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:20:04 loglevel=INFO   logger=src.services.pattern_learning _log_with_context() L152  Pattern Learning Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:20:10 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  All medical services verified and operational call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:20:10 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  Medical Section Generator initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:20:10 loglevel=INFO   logger=src.services.notegen_api_service _log_with_context() L152  NoteGen API Integration Service initialized call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:20:11 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.662s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:12 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.587s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:12 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.181s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:13 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.383s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:13 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.181s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:14 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.351s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:14 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.181s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:14 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.383s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:15 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.176s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:15 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.356s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:15 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.176s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:16 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.352s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:16 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.176s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:17 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.403s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:17 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.176s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:17 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.386s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:18 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.176s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:18 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.366s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:18 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.177s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:19 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.355s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:19 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.177s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:20 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.348s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:20 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.178s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:20 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.368s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:21 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.175s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:21 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.347s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:21 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.173s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:22 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.418s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:22 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.177s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:23 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.364s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:23 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.178s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:23 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.349s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:26 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations/_search [status:200 request:0.205s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:20:26 loglevel=WARNING logger=src.services.conversation_rag _log_with_context() L152  Could not find a clear consent statement for conversation zxcv using LLM. call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:20:28 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Getting SNOMED mappings for 18 terms in language: en call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:20:55 loglevel=INFO   logger=src.api.production_api _log_with_context() L152  Flushing Langfuse handler for encounter zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:20:56 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Langfuse client initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:31 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:31 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:31 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:31 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:33 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:33 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:34 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:34 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:34 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:34 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:34 loglevel=INFO   logger=src.api.production_api _log_with_context() L152  Starting notes generation job notes_zxcv_c90b94e5 for encounter zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:34 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Creating Langfuse handler for conversation_id: zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:34 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Langfuse handler created successfully for conversation: zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:34 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Initializing Medical Conversation RAG Service with AWS OpenSearch call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:34 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Using explicit AWS credentials from settings call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:34 loglevel=WARNING logger=opensearch log_request_fail() L280  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_cluster/health [status:404 request:0.608s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L280 
2025-06-27 23:22:34 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Health check endpoint not found, which is normal for AWS OpenSearch Serverless (AOSS). call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:34 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Skipping fallback connection test to allow startup with potentially pending IAM permissions. call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:35 loglevel=INFO   logger=opensearch log_request_success() L258  HEAD https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.188s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:35 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  OpenSearch index 'medical-conversations' already exists call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:35 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Medical Conversation RAG Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:35 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Initializing SNOMED RAG Service with Neo4j GraphRAG call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:35 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Neo4j GraphRAG connection established call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:35 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  SNOMED RAG Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:35 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  Initializing Medical Section Generator call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:35 loglevel=INFO   logger=src.services.pattern_learning _log_with_context() L152  Initializing Pattern Learning Service... call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:35 loglevel=INFO   logger=src.services.pattern_learning _log_with_context() L152  Pattern Learning Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:41 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  All medical services verified and operational call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:41 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  Medical Section Generator initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:41 loglevel=INFO   logger=src.services.notegen_api_service _log_with_context() L152  NoteGen API Integration Service initialized call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:42 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.668s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:43 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.572s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:43 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.179s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:44 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.412s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:44 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.174s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:45 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.367s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:45 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.179s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:45 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.365s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:46 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.176s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:46 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.362s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:47 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.175s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:47 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.363s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:47 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.177s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:48 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.341s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:48 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.172s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:48 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.354s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:49 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.172s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:49 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.374s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:50 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.176s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:50 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.440s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:51 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.176s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:51 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.433s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:51 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.178s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:52 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.358s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:52 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.178s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:53 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.398s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:53 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.177s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:53 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.379s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:54 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.176s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:54 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.356s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:55 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.175s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:55 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.373s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:57 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations/_search [status:200 request:0.202s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:22:57 loglevel=WARNING logger=src.services.conversation_rag _log_with_context() L152  Could not find a clear consent statement for conversation zxcv using LLM. call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:22:59 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Getting SNOMED mappings for 17 terms in language: en call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:11 loglevel=INFO   logger=src.api.production_api _log_with_context() L152  Flushing Langfuse handler for encounter zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:12 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Langfuse client initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:16 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:16 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:16 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:16 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:18 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:18 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:22 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:22 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:22 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:22 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:31 loglevel=INFO   logger=src.api.production_api _log_with_context() L152  Starting notes generation job notes_zxcv_d544320d for encounter zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:31 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Creating Langfuse handler for conversation_id: zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:31 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Langfuse handler created successfully for conversation: zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:31 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Initializing Medical Conversation RAG Service with AWS OpenSearch call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:31 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Using explicit AWS credentials from settings call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:31 loglevel=WARNING logger=opensearch log_request_fail() L280  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_cluster/health [status:404 request:0.600s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L280 
2025-06-27 23:23:31 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Health check endpoint not found, which is normal for AWS OpenSearch Serverless (AOSS). call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:31 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Skipping fallback connection test to allow startup with potentially pending IAM permissions. call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:32 loglevel=INFO   logger=opensearch log_request_success() L258  HEAD https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.192s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:32 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  OpenSearch index 'medical-conversations' already exists call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:32 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Medical Conversation RAG Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:32 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Initializing SNOMED RAG Service with Neo4j GraphRAG call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:32 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Neo4j GraphRAG connection established call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:32 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  SNOMED RAG Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:32 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  Initializing Medical Section Generator call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:32 loglevel=INFO   logger=src.services.pattern_learning _log_with_context() L152  Initializing Pattern Learning Service... call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:32 loglevel=INFO   logger=src.services.pattern_learning _log_with_context() L152  Pattern Learning Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:41 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  All medical services verified and operational call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:41 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  Medical Section Generator initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:41 loglevel=INFO   logger=src.services.notegen_api_service _log_with_context() L152  NoteGen API Integration Service initialized call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:43 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.704s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:43 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.526s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:44 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.171s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:44 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.367s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:45 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.195s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:45 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.330s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:45 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.170s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:46 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.338s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:46 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.171s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:46 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.345s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:47 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.172s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:47 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.364s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:47 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.169s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:48 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.348s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:48 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.172s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:49 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.372s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:49 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.173s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:49 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.336s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:50 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.172s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:50 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.333s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:50 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.174s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:51 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.348s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:51 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.172s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:51 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.333s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:52 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.171s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:52 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.340s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:52 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.170s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:53 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.352s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:53 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.169s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:54 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.395s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:54 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.168s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:54 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.343s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:23:54 loglevel=INFO   logger=src.api.production_api _log_with_context() L152  Flushing Langfuse handler for encounter zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:23:56 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Langfuse client initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:24:22 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:24:22 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:24:22 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:24:22 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:24:32 loglevel=INFO   logger=src.api.production_api _log_with_context() L152  Starting notes generation job notes_qwert_c7ba2ecc for encounter qwert call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:24:32 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Creating Langfuse handler for conversation_id: qwert call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:24:32 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Langfuse handler created successfully for conversation: qwert call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:24:32 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Initializing Medical Conversation RAG Service with AWS OpenSearch call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:24:32 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Using explicit AWS credentials from settings call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:25:47 loglevel=WARNING logger=opensearch log_request_fail() L280  GET https://vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com:443/_cluster/health [status:N/A request:75.076s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L280 
Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 198, in _new_conn
    sock = connection.create_connection(
        (self._dns_host, self.port),
    ...<2 lines>...
        socket_options=self.socket_options,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/connection.py", line 85, in create_connection
    raise err
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/connection.py", line 73, in create_connection
    sock.connect(sa)
    ~~~~~~~~~~~~^^^^
TimeoutError: [Errno 60] Operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 787, in urlopen
    response = self._make_request(
        conn,
    ...<10 lines>...
        **response_kw,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 488, in _make_request
    raise new_e
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 464, in _make_request
    self._validate_conn(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1093, in _validate_conn
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 704, in connect
    self.sock = sock = self._new_conn()
                       ~~~~~~~~~~~~~~^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 207, in _new_conn
    raise ConnectTimeoutError(
    ...<2 lines>...
    ) from e
urllib3.exceptions.ConnectTimeoutError: (<urllib3.connection.HTTPSConnection object at 0x11bdc41a0>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: /_cluster/health (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x11bdc41a0>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/http_requests.py", line 196, in perform_request
    response = self.session.send(prepared_request, **send_kwargs)
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/adapters.py", line 688, in send
    raise ConnectTimeout(e, request=request)
requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: /_cluster/health (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x11bdc41a0>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)'))
2025-06-27 23:25:47 loglevel=WARNING logger=src.services.conversation_rag _log_with_context() L152  An unexpected error occurred during OpenSearch health check: ConnectionTimeout caused by - ConnectTimeout(HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: /_cluster/health (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x11bdc41a0>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)'))). The service will continue to start, but OpenSearch operations may fail. call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 198, in _new_conn
    sock = connection.create_connection(
        (self._dns_host, self.port),
    ...<2 lines>...
        socket_options=self.socket_options,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/connection.py", line 85, in create_connection
    raise err
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/connection.py", line 73, in create_connection
    sock.connect(sa)
    ~~~~~~~~~~~~^^^^
TimeoutError: [Errno 60] Operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 787, in urlopen
    response = self._make_request(
        conn,
    ...<10 lines>...
        **response_kw,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 488, in _make_request
    raise new_e
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 464, in _make_request
    self._validate_conn(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1093, in _validate_conn
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 704, in connect
    self.sock = sock = self._new_conn()
                       ~~~~~~~~~~~~~~^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 207, in _new_conn
    raise ConnectTimeoutError(
    ...<2 lines>...
    ) from e
urllib3.exceptions.ConnectTimeoutError: (<urllib3.connection.HTTPSConnection object at 0x11bdc41a0>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: /_cluster/health (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x11bdc41a0>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/http_requests.py", line 196, in perform_request
    response = self.session.send(prepared_request, **send_kwargs)
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/adapters.py", line 688, in send
    raise ConnectTimeout(e, request=request)
requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: /_cluster/health (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x11bdc41a0>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/services/conversation_rag.py", line 141, in _test_connection
    cluster_health = self.opensearch_client.cluster.health()
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/client/utils.py", line 176, in _wrapped
    return func(*args, params=params, headers=headers, **kwargs)
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/client/cluster.py", line 132, in health
    return self.transport.perform_request(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        "GET",
        ^^^^^^
    ...<2 lines>...
        headers=headers,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/transport.py", line 457, in perform_request
    raise e
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/transport.py", line 418, in perform_request
    status, headers_response, data = connection.perform_request(
                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~^
        method,
        ^^^^^^^
    ...<5 lines>...
        timeout=timeout,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/http_requests.py", line 213, in perform_request
    raise ConnectionTimeout("TIMEOUT", str(e), e)
opensearchpy.exceptions.ConnectionTimeout: ConnectionTimeout caused by - ConnectTimeout(HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: /_cluster/health (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x11bdc41a0>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)')))
2025-06-27 23:26:42 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:26:42 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:26:42 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:26:42 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:26:44 loglevel=INFO   logger=src.api.production_api _log_with_context() L152  Starting notes generation job notes_qwert_8e68afbf for encounter qwert call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:26:44 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Creating Langfuse handler for conversation_id: qwert call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:26:44 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Langfuse handler created successfully for conversation: qwert call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:26:44 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Initializing Medical Conversation RAG Service with AWS OpenSearch call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:26:45 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Using explicit AWS credentials from settings call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:28:00 loglevel=WARNING logger=opensearch log_request_fail() L280  GET https://vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com:443/_cluster/health [status:N/A request:75.004s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L280 
Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 198, in _new_conn
    sock = connection.create_connection(
        (self._dns_host, self.port),
    ...<2 lines>...
        socket_options=self.socket_options,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/connection.py", line 85, in create_connection
    raise err
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/connection.py", line 73, in create_connection
    sock.connect(sa)
    ~~~~~~~~~~~~^^^^
TimeoutError: [Errno 60] Operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 787, in urlopen
    response = self._make_request(
        conn,
    ...<10 lines>...
        **response_kw,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 488, in _make_request
    raise new_e
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 464, in _make_request
    self._validate_conn(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1093, in _validate_conn
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 704, in connect
    self.sock = sock = self._new_conn()
                       ~~~~~~~~~~~~~~^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 207, in _new_conn
    raise ConnectTimeoutError(
    ...<2 lines>...
    ) from e
urllib3.exceptions.ConnectTimeoutError: (<urllib3.connection.HTTPSConnection object at 0x111cc41a0>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: /_cluster/health (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x111cc41a0>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/http_requests.py", line 196, in perform_request
    response = self.session.send(prepared_request, **send_kwargs)
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/adapters.py", line 688, in send
    raise ConnectTimeout(e, request=request)
requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: /_cluster/health (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x111cc41a0>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)'))
2025-06-27 23:28:00 loglevel=WARNING logger=src.services.conversation_rag _log_with_context() L152  An unexpected error occurred during OpenSearch health check: ConnectionTimeout caused by - ConnectTimeout(HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: /_cluster/health (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x111cc41a0>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)'))). The service will continue to start, but OpenSearch operations may fail. call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 198, in _new_conn
    sock = connection.create_connection(
        (self._dns_host, self.port),
    ...<2 lines>...
        socket_options=self.socket_options,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/connection.py", line 85, in create_connection
    raise err
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/connection.py", line 73, in create_connection
    sock.connect(sa)
    ~~~~~~~~~~~~^^^^
TimeoutError: [Errno 60] Operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 787, in urlopen
    response = self._make_request(
        conn,
    ...<10 lines>...
        **response_kw,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 488, in _make_request
    raise new_e
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 464, in _make_request
    self._validate_conn(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1093, in _validate_conn
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 704, in connect
    self.sock = sock = self._new_conn()
                       ~~~~~~~~~~~~~~^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 207, in _new_conn
    raise ConnectTimeoutError(
    ...<2 lines>...
    ) from e
urllib3.exceptions.ConnectTimeoutError: (<urllib3.connection.HTTPSConnection object at 0x111cc41a0>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: /_cluster/health (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x111cc41a0>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/http_requests.py", line 196, in perform_request
    response = self.session.send(prepared_request, **send_kwargs)
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/adapters.py", line 688, in send
    raise ConnectTimeout(e, request=request)
requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: /_cluster/health (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x111cc41a0>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/services/conversation_rag.py", line 141, in _test_connection
    cluster_health = self.opensearch_client.cluster.health()
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/client/utils.py", line 176, in _wrapped
    return func(*args, params=params, headers=headers, **kwargs)
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/client/cluster.py", line 132, in health
    return self.transport.perform_request(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        "GET",
        ^^^^^^
    ...<2 lines>...
        headers=headers,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/transport.py", line 457, in perform_request
    raise e
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/transport.py", line 418, in perform_request
    status, headers_response, data = connection.perform_request(
                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~^
        method,
        ^^^^^^^
    ...<5 lines>...
        timeout=timeout,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/http_requests.py", line 213, in perform_request
    raise ConnectionTimeout("TIMEOUT", str(e), e)
opensearchpy.exceptions.ConnectionTimeout: ConnectionTimeout caused by - ConnectTimeout(HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: /_cluster/health (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x111cc41a0>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)')))
2025-06-27 23:29:15 loglevel=WARNING logger=opensearch log_request_fail() L280  HEAD https://vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com:443/medical-conversations [status:N/A request:75.067s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L280 
Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 198, in _new_conn
    sock = connection.create_connection(
        (self._dns_host, self.port),
    ...<2 lines>...
        socket_options=self.socket_options,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/connection.py", line 85, in create_connection
    raise err
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/connection.py", line 73, in create_connection
    sock.connect(sa)
    ~~~~~~~~~~~~^^^^
TimeoutError: [Errno 60] Operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 787, in urlopen
    response = self._make_request(
        conn,
    ...<10 lines>...
        **response_kw,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 488, in _make_request
    raise new_e
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 464, in _make_request
    self._validate_conn(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1093, in _validate_conn
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 704, in connect
    self.sock = sock = self._new_conn()
                       ~~~~~~~~~~~~~~^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 207, in _new_conn
    raise ConnectTimeoutError(
    ...<2 lines>...
    ) from e
urllib3.exceptions.ConnectTimeoutError: (<urllib3.connection.HTTPSConnection object at 0x111cc3ed0>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: /medical-conversations (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x111cc3ed0>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/http_requests.py", line 196, in perform_request
    response = self.session.send(prepared_request, **send_kwargs)
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/adapters.py", line 688, in send
    raise ConnectTimeout(e, request=request)
requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: /medical-conversations (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x111cc3ed0>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)'))
2025-06-27 23:29:15 loglevel=ERROR  logger=src.services.conversation_rag _log_with_context() L152  Failed to create OpenSearch index: ConnectionTimeout caused by - ConnectTimeout(HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: /medical-conversations (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x111cc3ed0>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)'))) call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:29:15 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Medical Conversation RAG Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:29:15 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Initializing SNOMED RAG Service with Neo4j GraphRAG call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:29:15 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Neo4j GraphRAG connection established call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:29:15 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  SNOMED RAG Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:29:15 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  Initializing Medical Section Generator call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:29:15 loglevel=INFO   logger=src.services.pattern_learning _log_with_context() L152  Initializing Pattern Learning Service... call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:29:15 loglevel=INFO   logger=src.services.pattern_learning _log_with_context() L152  Pattern Learning Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:30:36 loglevel=WARNING logger=opensearch log_request_fail() L280  HEAD https://vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com:443/ [status:N/A request:75.061s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L280 
Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 198, in _new_conn
    sock = connection.create_connection(
        (self._dns_host, self.port),
    ...<2 lines>...
        socket_options=self.socket_options,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/connection.py", line 85, in create_connection
    raise err
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/connection.py", line 73, in create_connection
    sock.connect(sa)
    ~~~~~~~~~~~~^^^^
TimeoutError: [Errno 60] Operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 787, in urlopen
    response = self._make_request(
        conn,
    ...<10 lines>...
        **response_kw,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 488, in _make_request
    raise new_e
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 464, in _make_request
    self._validate_conn(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1093, in _validate_conn
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 704, in connect
    self.sock = sock = self._new_conn()
                       ~~~~~~~~~~~~~~^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 207, in _new_conn
    raise ConnectTimeoutError(
    ...<2 lines>...
    ) from e
urllib3.exceptions.ConnectTimeoutError: (<urllib3.connection.HTTPSConnection object at 0x111cc0910>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: / (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x111cc0910>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/http_requests.py", line 196, in perform_request
    response = self.session.send(prepared_request, **send_kwargs)
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/adapters.py", line 688, in send
    raise ConnectTimeout(e, request=request)
requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: / (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x111cc0910>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)'))
2025-06-27 23:30:36 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  All medical services verified and operational call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:30:36 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  Medical Section Generator initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:30:36 loglevel=INFO   logger=src.services.notegen_api_service _log_with_context() L152  NoteGen API Integration Service initialized call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:33:09 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:33:09 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:33:09 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:33:09 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:33:16 loglevel=INFO   logger=src.api.production_api _log_with_context() L152  Starting notes generation job notes_qwert_bdcc0210 for encounter qwert call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:33:16 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Creating Langfuse handler for conversation_id: qwert call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:33:16 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Langfuse handler created successfully for conversation: qwert call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:33:16 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Initializing Medical Conversation RAG Service with AWS OpenSearch call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:33:16 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Using OpenSearch basic authentication (username/password) call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:34:31 loglevel=WARNING logger=opensearch log_request_fail() L280  GET https://vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com:443/_cluster/health [status:N/A request:75.069s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L280 
Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 198, in _new_conn
    sock = connection.create_connection(
        (self._dns_host, self.port),
    ...<2 lines>...
        socket_options=self.socket_options,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/connection.py", line 85, in create_connection
    raise err
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/connection.py", line 73, in create_connection
    sock.connect(sa)
    ~~~~~~~~~~~~^^^^
TimeoutError: [Errno 60] Operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 787, in urlopen
    response = self._make_request(
        conn,
    ...<10 lines>...
        **response_kw,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 488, in _make_request
    raise new_e
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 464, in _make_request
    self._validate_conn(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1093, in _validate_conn
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 704, in connect
    self.sock = sock = self._new_conn()
                       ~~~~~~~~~~~~~~^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 207, in _new_conn
    raise ConnectTimeoutError(
    ...<2 lines>...
    ) from e
urllib3.exceptions.ConnectTimeoutError: (<urllib3.connection.HTTPSConnection object at 0x1219e5160>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: /_cluster/health (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x1219e5160>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/http_requests.py", line 196, in perform_request
    response = self.session.send(prepared_request, **send_kwargs)
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/adapters.py", line 688, in send
    raise ConnectTimeout(e, request=request)
requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: /_cluster/health (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x1219e5160>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)'))
2025-06-27 23:34:31 loglevel=WARNING logger=src.services.conversation_rag _log_with_context() L152  An unexpected error occurred during OpenSearch health check: ConnectionTimeout caused by - ConnectTimeout(HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: /_cluster/health (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x1219e5160>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)'))). The service will continue to start, but OpenSearch operations may fail. call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 198, in _new_conn
    sock = connection.create_connection(
        (self._dns_host, self.port),
    ...<2 lines>...
        socket_options=self.socket_options,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/connection.py", line 85, in create_connection
    raise err
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/connection.py", line 73, in create_connection
    sock.connect(sa)
    ~~~~~~~~~~~~^^^^
TimeoutError: [Errno 60] Operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 787, in urlopen
    response = self._make_request(
        conn,
    ...<10 lines>...
        **response_kw,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 488, in _make_request
    raise new_e
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 464, in _make_request
    self._validate_conn(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1093, in _validate_conn
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 704, in connect
    self.sock = sock = self._new_conn()
                       ~~~~~~~~~~~~~~^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 207, in _new_conn
    raise ConnectTimeoutError(
    ...<2 lines>...
    ) from e
urllib3.exceptions.ConnectTimeoutError: (<urllib3.connection.HTTPSConnection object at 0x1219e5160>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: /_cluster/health (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x1219e5160>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/http_requests.py", line 196, in perform_request
    response = self.session.send(prepared_request, **send_kwargs)
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/adapters.py", line 688, in send
    raise ConnectTimeout(e, request=request)
requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: /_cluster/health (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x1219e5160>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/services/conversation_rag.py", line 141, in _test_connection
    cluster_health = self.opensearch_client.cluster.health()
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/client/utils.py", line 176, in _wrapped
    return func(*args, params=params, headers=headers, **kwargs)
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/client/cluster.py", line 132, in health
    return self.transport.perform_request(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        "GET",
        ^^^^^^
    ...<2 lines>...
        headers=headers,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/transport.py", line 457, in perform_request
    raise e
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/transport.py", line 418, in perform_request
    status, headers_response, data = connection.perform_request(
                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~^
        method,
        ^^^^^^^
    ...<5 lines>...
        timeout=timeout,
        ^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/http_requests.py", line 213, in perform_request
    raise ConnectionTimeout("TIMEOUT", str(e), e)
opensearchpy.exceptions.ConnectionTimeout: ConnectionTimeout caused by - ConnectTimeout(HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: /_cluster/health (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x1219e5160>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)')))
2025-06-27 23:35:46 loglevel=WARNING logger=opensearch log_request_fail() L280  HEAD https://vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com:443/medical-conversations [status:N/A request:75.005s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L280 
Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 198, in _new_conn
    sock = connection.create_connection(
        (self._dns_host, self.port),
    ...<2 lines>...
        socket_options=self.socket_options,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/connection.py", line 85, in create_connection
    raise err
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/connection.py", line 73, in create_connection
    sock.connect(sa)
    ~~~~~~~~~~~~^^^^
TimeoutError: [Errno 60] Operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 787, in urlopen
    response = self._make_request(
        conn,
    ...<10 lines>...
        **response_kw,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 488, in _make_request
    raise new_e
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 464, in _make_request
    self._validate_conn(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1093, in _validate_conn
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 704, in connect
    self.sock = sock = self._new_conn()
                       ~~~~~~~~~~~~~~^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 207, in _new_conn
    raise ConnectTimeoutError(
    ...<2 lines>...
    ) from e
urllib3.exceptions.ConnectTimeoutError: (<urllib3.connection.HTTPSConnection object at 0x121d86850>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: /medical-conversations (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x121d86850>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/http_requests.py", line 196, in perform_request
    response = self.session.send(prepared_request, **send_kwargs)
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/adapters.py", line 688, in send
    raise ConnectTimeout(e, request=request)
requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: /medical-conversations (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x121d86850>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)'))
2025-06-27 23:35:46 loglevel=ERROR  logger=src.services.conversation_rag _log_with_context() L152  Failed to create OpenSearch index: ConnectionTimeout caused by - ConnectTimeout(HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: /medical-conversations (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x121d86850>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)'))) call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:35:46 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Medical Conversation RAG Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:35:46 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Initializing SNOMED RAG Service with Neo4j GraphRAG call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:35:46 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Neo4j GraphRAG connection established call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:35:46 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  SNOMED RAG Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:35:46 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  Initializing Medical Section Generator call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:35:46 loglevel=INFO   logger=src.services.pattern_learning _log_with_context() L152  Initializing Pattern Learning Service... call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:35:46 loglevel=INFO   logger=src.services.pattern_learning _log_with_context() L152  Pattern Learning Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:37:07 loglevel=WARNING logger=opensearch log_request_fail() L280  HEAD https://vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com:443/ [status:N/A request:75.069s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L280 
Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 198, in _new_conn
    sock = connection.create_connection(
        (self._dns_host, self.port),
    ...<2 lines>...
        socket_options=self.socket_options,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/connection.py", line 85, in create_connection
    raise err
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/connection.py", line 73, in create_connection
    sock.connect(sa)
    ~~~~~~~~~~~~^^^^
TimeoutError: [Errno 60] Operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 787, in urlopen
    response = self._make_request(
        conn,
    ...<10 lines>...
        **response_kw,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 488, in _make_request
    raise new_e
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 464, in _make_request
    self._validate_conn(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 1093, in _validate_conn
    conn.connect()
    ~~~~~~~~~~~~^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 704, in connect
    self.sock = sock = self._new_conn()
                       ~~~~~~~~~~~~~~^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connection.py", line 207, in _new_conn
    raise ConnectTimeoutError(
    ...<2 lines>...
    ) from e
urllib3.exceptions.ConnectTimeoutError: (<urllib3.connection.HTTPSConnection object at 0x121d86e90>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: / (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x121d86e90>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/http_requests.py", line 196, in perform_request
    response = self.session.send(prepared_request, **send_kwargs)
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/requests/adapters.py", line 688, in send
    raise ConnectTimeout(e, request=request)
requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com', port=443): Max retries exceeded with url: / (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x121d86e90>, 'Connection to vpc-notegenai-staging-search-hrrjaqryo42zvlg33vivxtubfy.ca-central-1.es.amazonaws.com timed out. (connect timeout=300)'))
2025-06-27 23:37:07 loglevel=INFO   logger=src.api.production_api _log_with_context() L152  Flushing Langfuse handler for encounter qwert call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:37:08 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Langfuse client initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:37:23 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:37:23 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:37:23 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:37:23 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:37:26 loglevel=INFO   logger=src.api.production_api _log_with_context() L152  Starting notes generation job notes_qwert_caf4ef8b for encounter qwert call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:37:26 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Creating Langfuse handler for conversation_id: qwert call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:37:26 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Langfuse handler created successfully for conversation: qwert call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:37:26 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Initializing Medical Conversation RAG Service with AWS OpenSearch call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:37:26 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Using OpenSearch basic authentication (username/password) call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:38:32 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:38:32 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:38:32 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:38:32 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:38:41 loglevel=INFO   logger=src.api.production_api _log_with_context() L152  Starting notes generation job notes_qwert_3007f279 for encounter qwert call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:38:41 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Creating Langfuse handler for conversation_id: qwert call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:38:41 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Langfuse handler created successfully for conversation: qwert call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:38:41 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Initializing Medical Conversation RAG Service with AWS OpenSearch call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:38:41 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Using OpenSearch basic authentication (username/password) call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:40:42 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:40:42 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:40:42 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:40:42 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:40:49 loglevel=INFO   logger=src.api.production_api _log_with_context() L152  Starting notes generation job notes_qwert_1295d84f for encounter qwert call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:40:49 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Creating Langfuse handler for conversation_id: qwert call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:40:49 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Langfuse handler created successfully for conversation: qwert call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:40:49 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Initializing Medical Conversation RAG Service with AWS OpenSearch call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:40:49 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Using OpenSearch basic authentication (username/password) call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:41:40 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:41:40 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:41:40 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:41:40 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:41:42 loglevel=INFO   logger=src.api.production_api _log_with_context() L152  Starting notes generation job notes_qwert_22f31b14 for encounter qwert call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:41:42 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Creating Langfuse handler for conversation_id: qwert call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:41:42 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Langfuse handler created successfully for conversation: qwert call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:41:42 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Initializing Medical Conversation RAG Service with AWS OpenSearch call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:41:42 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Using explicit AWS credentials from settings call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:41:43 loglevel=WARNING logger=opensearch log_request_fail() L280  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_cluster/health [status:404 request:0.692s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L280 
2025-06-27 23:41:43 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Health check endpoint not found, which is normal for AWS OpenSearch Serverless (AOSS). call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:41:43 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Skipping fallback connection test to allow startup with potentially pending IAM permissions. call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:41:43 loglevel=INFO   logger=opensearch log_request_success() L258  HEAD https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.196s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:41:43 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  OpenSearch index 'medical-conversations' already exists call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:41:43 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Medical Conversation RAG Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:41:43 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Initializing SNOMED RAG Service with Neo4j GraphRAG call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:41:43 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Neo4j GraphRAG connection established call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:41:43 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  SNOMED RAG Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:41:43 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  Initializing Medical Section Generator call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:41:43 loglevel=INFO   logger=src.services.pattern_learning _log_with_context() L152  Initializing Pattern Learning Service... call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:41:43 loglevel=INFO   logger=src.services.pattern_learning _log_with_context() L152  Pattern Learning Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:41:50 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  All medical services verified and operational call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:41:50 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  Medical Section Generator initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:41:50 loglevel=INFO   logger=src.services.notegen_api_service _log_with_context() L152  NoteGen API Integration Service initialized call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-27 23:41:51 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.675s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:41:52 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.919s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:41:53 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.193s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:41:54 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.830s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:41:54 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.177s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:41:55 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:1.104s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:41:55 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.173s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:41:57 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:1.299s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:41:57 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.171s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:41:58 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:1.290s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:41:59 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.170s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:00 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:1.536s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:01 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.188s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:03 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:2.287s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:03 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.178s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:06 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:2.715s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:06 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.182s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:09 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:2.303s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:09 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.181s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:10 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.931s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:10 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.176s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:11 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:1.068s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:12 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.173s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:13 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:1.438s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:14 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.171s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:15 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.957s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:15 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.172s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:16 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.675s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:16 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.531s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:18 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:1.113s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:18 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.549s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:20 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:2.019s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:21 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.175s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:23 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:2.190s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:23 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.176s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:24 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:1.021s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:25 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.182s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:26 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.882s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:26 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.175s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:27 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.845s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:27 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.176s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:28 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.988s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:28 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.184s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:30 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:1.515s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:30 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.176s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:32 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:1.683s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:32 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.176s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:34 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:1.760s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:35 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.183s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:37 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:2.375s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:37 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.173s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:39 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:1.367s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:39 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.172s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:42 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:2.513s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:42 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.193s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:44 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:1.791s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:44 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.174s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:46 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:1.383s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:46 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.191s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:49 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:3.189s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:49 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.172s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:52 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:2.886s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:53 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.173s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:56 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:3.166s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:56 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.178s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:58 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:1.768s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:42:58 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.173s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:01 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:2.845s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:02 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.171s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:06 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:4.153s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:06 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.171s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:10 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:4.157s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:11 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.176s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:13 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:2.450s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:14 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.172s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:17 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:3.609s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:18 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.171s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:21 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:3.873s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:22 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.174s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:24 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:2.195s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:24 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.170s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:28 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:3.162s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:28 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.179s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:29 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:1.590s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:30 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.192s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:32 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:2.035s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:32 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.173s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:36 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:3.576s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:36 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.175s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:39 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:2.288s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:39 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.171s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:40 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.937s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:40 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.168s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:42 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:1.811s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:42 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.171s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:44 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:1.913s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:45 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.522s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:48 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:2.530s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:48 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.173s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:49 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:1.438s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:50 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.174s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:53 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:3.412s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:54 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.175s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:56 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:2.936s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:57 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.170s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:59 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:1.974s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:43:59 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.179s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:44:02 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:3.059s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:44:03 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.168s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:44:07 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:3.878s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:44:07 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.181s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:44:09 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:2.074s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:44:09 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.168s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:44:12 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:2.885s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:44:13 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.171s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:44:14 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:1.674s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:44:15 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.193s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:44:18 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:3.430s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:44:19 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.538s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:44:22 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:3.399s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:44:23 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.172s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:44:25 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:2.542s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:44:26 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.172s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:44:29 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:3.442s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:44:29 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.169s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-27 23:44:31 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:1.375s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 00:35:39 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:35:39 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:35:39 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:35:39 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:35:49 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Initializing Medical Conversation RAG Service with AWS OpenSearch call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:35:49 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Using explicit AWS credentials from settings call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:35:50 loglevel=WARNING logger=opensearch log_request_fail() L280  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_cluster/health [status:404 request:0.736s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L280 
2025-06-28 00:35:50 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Health check endpoint not found, which is normal for AWS OpenSearch Serverless (AOSS). call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:35:50 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Skipping fallback connection test to allow startup with potentially pending IAM permissions. call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:35:50 loglevel=INFO   logger=opensearch log_request_success() L258  HEAD https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.194s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 00:35:50 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  OpenSearch index 'medical-conversations' already exists call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:35:50 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Medical Conversation RAG Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:35:51 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Initializing SNOMED RAG Service with Neo4j GraphRAG call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:35:51 loglevel=ERROR  logger=src.services.snomed_rag _log_with_context() L152  SNOMED RAG initialization failed: Couldn't connect to localhost:7687 (resolved to ('[::1]:7687', '127.0.0.1:7687')):
Failed to establish connection to ResolvedIPv6Address(('::1', 7687, 0, 0)) (reason [Errno 61] Connect call failed ('::1', 7687, 0, 0))
Failed to establish connection to ResolvedIPv4Address(('127.0.0.1', 7687)) (reason [Errno 61] Connect call failed ('127.0.0.1', 7687)) call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:35:51 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  Initializing Medical Section Generator call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:35:51 loglevel=INFO   logger=src.services.pattern_learning _log_with_context() L152  Initializing Pattern Learning Service... call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:35:51 loglevel=INFO   logger=src.services.pattern_learning _log_with_context() L152  Pattern Learning Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:35:57 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Initializing SNOMED RAG Service with Neo4j GraphRAG call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:35:57 loglevel=ERROR  logger=src.services.snomed_rag _log_with_context() L152  SNOMED RAG initialization failed: Couldn't connect to localhost:7687 (resolved to ('[::1]:7687', '127.0.0.1:7687')):
Failed to establish connection to ResolvedIPv6Address(('::1', 7687, 0, 0)) (reason [Errno 61] Connect call failed ('::1', 7687, 0, 0))
Failed to establish connection to ResolvedIPv4Address(('127.0.0.1', 7687)) (reason [Errno 61] Connect call failed ('127.0.0.1', 7687)) call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:35:57 loglevel=ERROR  logger=src.services.snomed_rag _log_with_context() L152  SNOMED RAG health check failed: SNOMED RAG initialization failed: Couldn't connect to localhost:7687 (resolved to ('[::1]:7687', '127.0.0.1:7687')):
Failed to establish connection to ResolvedIPv6Address(('::1', 7687, 0, 0)) (reason [Errno 61] Connect call failed ('::1', 7687, 0, 0))
Failed to establish connection to ResolvedIPv4Address(('127.0.0.1', 7687)) (reason [Errno 61] Connect call failed ('127.0.0.1', 7687)) call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:35:57 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  All medical services verified and operational call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:35:57 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  Medical Section Generator initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:35:58 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Initializing SNOMED RAG Service with Neo4j GraphRAG call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:35:58 loglevel=ERROR  logger=src.services.snomed_rag _log_with_context() L152  SNOMED RAG initialization failed: Couldn't connect to localhost:7687 (resolved to ('[::1]:7687', '127.0.0.1:7687')):
Failed to establish connection to ResolvedIPv6Address(('::1', 7687, 0, 0)) (reason [Errno 61] Connect call failed ('::1', 7687, 0, 0))
Failed to establish connection to ResolvedIPv4Address(('127.0.0.1', 7687)) (reason [Errno 61] Connect call failed ('127.0.0.1', 7687)) call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:35:58 loglevel=ERROR  logger=src.services.snomed_rag _log_with_context() L152  SNOMED RAG health check failed: SNOMED RAG initialization failed: Couldn't connect to localhost:7687 (resolved to ('[::1]:7687', '127.0.0.1:7687')):
Failed to establish connection to ResolvedIPv6Address(('::1', 7687, 0, 0)) (reason [Errno 61] Connect call failed ('::1', 7687, 0, 0))
Failed to establish connection to ResolvedIPv4Address(('127.0.0.1', 7687)) (reason [Errno 61] Connect call failed ('127.0.0.1', 7687)) call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:19 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:19 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:20 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:20 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:20 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:20 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:24 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:24 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:25 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:25 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:25 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:25 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:42 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:42 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:43 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:43 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:43 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:43 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:48 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:48 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:49 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:49 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:49 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:49 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:50 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:50 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:51 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:51 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:51 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:51 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:55 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:55 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:56 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:56 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:56 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:37:56 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:01 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:01 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:02 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:02 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:02 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:02 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:09 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:09 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:12 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:12 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:12 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:12 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:17 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:17 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:18 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:18 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:18 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:18 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:18 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:18 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:19 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:19 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:19 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:19 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:23 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:23 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:24 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:24 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:24 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:24 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:29 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:29 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:30 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:30 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:30 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:30 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:34 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:34 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:35 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:35 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:35 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:35 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:44 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Initializing Medical Conversation RAG Service with AWS OpenSearch call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:44 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Using explicit AWS credentials from settings call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:44 loglevel=WARNING logger=opensearch log_request_fail() L280  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_cluster/health [status:404 request:0.690s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L280 
2025-06-28 00:38:44 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Health check endpoint not found, which is normal for AWS OpenSearch Serverless (AOSS). call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:44 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Skipping fallback connection test to allow startup with potentially pending IAM permissions. call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:45 loglevel=INFO   logger=opensearch log_request_success() L258  HEAD https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.213s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 00:38:45 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  OpenSearch index 'medical-conversations' already exists call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:45 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Medical Conversation RAG Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:45 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Initializing SNOMED RAG Service with Neo4j GraphRAG call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:45 loglevel=ERROR  logger=src.services.snomed_rag _log_with_context() L152  SNOMED RAG initialization failed: Couldn't connect to localhost:7687 (resolved to ('[::1]:7687', '127.0.0.1:7687')):
Failed to establish connection to ResolvedIPv6Address(('::1', 7687, 0, 0)) (reason [Errno 61] Connect call failed ('::1', 7687, 0, 0))
Failed to establish connection to ResolvedIPv4Address(('127.0.0.1', 7687)) (reason [Errno 61] Connect call failed ('127.0.0.1', 7687)) call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:45 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  Initializing Medical Section Generator call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:45 loglevel=INFO   logger=src.services.pattern_learning _log_with_context() L152  Initializing Pattern Learning Service... call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:45 loglevel=INFO   logger=src.services.pattern_learning _log_with_context() L152  Pattern Learning Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:50 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Initializing SNOMED RAG Service with Neo4j GraphRAG call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:50 loglevel=ERROR  logger=src.services.snomed_rag _log_with_context() L152  SNOMED RAG initialization failed: Couldn't connect to localhost:7687 (resolved to ('[::1]:7687', '127.0.0.1:7687')):
Failed to establish connection to ResolvedIPv6Address(('::1', 7687, 0, 0)) (reason [Errno 61] Connect call failed ('::1', 7687, 0, 0))
Failed to establish connection to ResolvedIPv4Address(('127.0.0.1', 7687)) (reason [Errno 61] Connect call failed ('127.0.0.1', 7687)) call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:50 loglevel=ERROR  logger=src.services.snomed_rag _log_with_context() L152  SNOMED RAG health check failed: SNOMED RAG initialization failed: Couldn't connect to localhost:7687 (resolved to ('[::1]:7687', '127.0.0.1:7687')):
Failed to establish connection to ResolvedIPv6Address(('::1', 7687, 0, 0)) (reason [Errno 61] Connect call failed ('::1', 7687, 0, 0))
Failed to establish connection to ResolvedIPv4Address(('127.0.0.1', 7687)) (reason [Errno 61] Connect call failed ('127.0.0.1', 7687)) call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:50 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  All medical services verified and operational call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:50 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  Medical Section Generator initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:51 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Initializing SNOMED RAG Service with Neo4j GraphRAG call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:51 loglevel=ERROR  logger=src.services.snomed_rag _log_with_context() L152  SNOMED RAG initialization failed: Couldn't connect to localhost:7687 (resolved to ('[::1]:7687', '127.0.0.1:7687')):
Failed to establish connection to ResolvedIPv6Address(('::1', 7687, 0, 0)) (reason [Errno 61] Connect call failed ('::1', 7687, 0, 0))
Failed to establish connection to ResolvedIPv4Address(('127.0.0.1', 7687)) (reason [Errno 61] Connect call failed ('127.0.0.1', 7687)) call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:38:51 loglevel=ERROR  logger=src.services.snomed_rag _log_with_context() L152  SNOMED RAG health check failed: SNOMED RAG initialization failed: Couldn't connect to localhost:7687 (resolved to ('[::1]:7687', '127.0.0.1:7687')):
Failed to establish connection to ResolvedIPv6Address(('::1', 7687, 0, 0)) (reason [Errno 61] Connect call failed ('::1', 7687, 0, 0))
Failed to establish connection to ResolvedIPv4Address(('127.0.0.1', 7687)) (reason [Errno 61] Connect call failed ('127.0.0.1', 7687)) call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:39:57 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:39:57 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:39:59 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:39:59 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:39:59 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 00:39:59 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:11:32 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:11:32 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:11:32 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:11:32 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:11:53 loglevel=INFO   logger=src.api.production_api _log_with_context() L152  Starting notes generation job notes_zxcv_6494f5fb for encounter zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:11:53 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Creating Langfuse handler for conversation_id: zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:11:53 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Langfuse handler created successfully for conversation: zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:11:53 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Initializing Medical Conversation RAG Service with AWS OpenSearch call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:11:53 loglevel=INFO   logger=botocore.credentials load() L1213 Found credentials in environment variables. call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/botocore/credentials.py L1213
2025-06-28 13:11:54 loglevel=WARNING logger=opensearch log_request_fail() L280  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_cluster/health [status:404 request:0.716s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L280 
2025-06-28 13:11:54 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Health check endpoint not found, which is normal for AWS OpenSearch Serverless (AOSS). call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:11:54 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Skipping fallback connection test to allow startup with potentially pending IAM permissions. call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:11:54 loglevel=INFO   logger=opensearch log_request_success() L258  HEAD https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.191s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:11:54 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  OpenSearch index 'medical-conversations' already exists call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:11:54 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Medical Conversation RAG Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:11:54 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Initializing SNOMED RAG Service with Neo4j GraphRAG call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:11:54 loglevel=ERROR  logger=src.services.snomed_rag _log_with_context() L152  SNOMED RAG initialization failed: Couldn't connect to localhost:7687 (resolved to ('[::1]:7687', '127.0.0.1:7687')):
Failed to establish connection to ResolvedIPv6Address(('::1', 7687, 0, 0)) (reason [Errno 61] Connect call failed ('::1', 7687, 0, 0))
Failed to establish connection to ResolvedIPv4Address(('127.0.0.1', 7687)) (reason [Errno 61] Connect call failed ('127.0.0.1', 7687)) call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:11:54 loglevel=ERROR  logger=src.api.production_api _log_with_context() L152  Encounter processing pipeline failed: SNOMED RAG initialization failed: Couldn't connect to localhost:7687 (resolved to ('[::1]:7687', '127.0.0.1:7687')):
Failed to establish connection to ResolvedIPv6Address(('::1', 7687, 0, 0)) (reason [Errno 61] Connect call failed ('::1', 7687, 0, 0))
Failed to establish connection to ResolvedIPv4Address(('127.0.0.1', 7687)) (reason [Errno 61] Connect call failed ('127.0.0.1', 7687)) call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/neo4j/_async_compat/network/_bolt_socket.py", line 199, in _connect_secure
    await wait_for(loop.sock_connect(s, resolved_address), timeout)
  File "/opt/homebrew/Cellar/python@3.13/3.13.3_1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/tasks.py", line 507, in wait_for
    return await fut
           ^^^^^^^^^
  File "uvloop/loop.pyx", line 2633, in sock_connect
  File "uvloop/loop.pyx", line 1108, in uvloop.loop.Loop._sock_connect_cb
ConnectionRefusedError: [Errno 61] Connect call failed ('::1', 7687, 0, 0)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/neo4j/_async/io/_bolt_socket.py", line 328, in connect
    s = await cls._connect_secure(
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
        resolved_address, tcp_timeout, keep_alive, ssl_context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/neo4j/_async_compat/network/_bolt_socket.py", line 270, in _connect_secure
    raise ServiceUnavailable(
    ...<2 lines>...
    ) from error
neo4j.exceptions.ServiceUnavailable: Failed to establish connection to ResolvedIPv6Address(('::1', 7687, 0, 0)) (reason [Errno 61] Connect call failed ('::1', 7687, 0, 0))

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/services/snomed_rag.py", line 65, in initialize
    await self._test_connection()
  File "/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/services/snomed_rag.py", line 78, in _test_connection
    result = await session.run(SNOMED_CONNECTION_TEST_QUERY)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/neo4j/_async/work/session.py", line 313, in run
    await self._connect(self._config.default_access_mode)
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/neo4j/_async/work/session.py", line 136, in _connect
    await super()._connect(
        access_mode, auth=self._config.auth, **acquire_kwargs
    )
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/neo4j/_async/work/workspace.py", line 202, in _connect
    self._connection = await self._pool.acquire(**acquire_kwargs_)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/neo4j/_async/io/_pool.py", line 665, in acquire
    return await self._acquire(
           ^^^^^^^^^^^^^^^^^^^^
        self.address, auth, deadline, liveness_check_timeout
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/neo4j/_async/io/_pool.py", line 411, in _acquire
    return await connection_creator()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/neo4j/_async/io/_pool.py", line 233, in connection_creator
    connection = await self.opener(
                 ^^^^^^^^^^^^^^^^^^
        address, auth or self.pool_config.auth, deadline
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/neo4j/_async/io/_pool.py", line 627, in opener
    return await AsyncBolt.open(
           ^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/neo4j/_async/io/_bolt.py", line 369, in open
    s, protocol_version, handshake, data = await AsyncBoltSocket.connect(
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/neo4j/_async/io/_bolt_socket.py", line 376, in connect
    raise ServiceUnavailable(
    ...<2 lines>...
    ) from errors[0]
neo4j.exceptions.ServiceUnavailable: Couldn't connect to localhost:7687 (resolved to ('[::1]:7687', '127.0.0.1:7687')):
Failed to establish connection to ResolvedIPv6Address(('::1', 7687, 0, 0)) (reason [Errno 61] Connect call failed ('::1', 7687, 0, 0))
Failed to establish connection to ResolvedIPv4Address(('127.0.0.1', 7687)) (reason [Errno 61] Connect call failed ('127.0.0.1', 7687))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/api/production_api.py", line 79, in _run_encounter_processing_pipeline
    snomed_rag: SNOMEDRAGService = await get_snomed_rag_service()
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/services/snomed_rag.py", line 373, in get_snomed_rag_service
    await _snomed_rag_service.initialize()
  File "/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/services/snomed_rag.py", line 73, in initialize
    raise RuntimeError(f"SNOMED RAG initialization failed: {str(e)}")
RuntimeError: SNOMED RAG initialization failed: Couldn't connect to localhost:7687 (resolved to ('[::1]:7687', '127.0.0.1:7687')):
Failed to establish connection to ResolvedIPv6Address(('::1', 7687, 0, 0)) (reason [Errno 61] Connect call failed ('::1', 7687, 0, 0))
Failed to establish connection to ResolvedIPv4Address(('127.0.0.1', 7687)) (reason [Errno 61] Connect call failed ('127.0.0.1', 7687))
2025-06-28 13:11:54 loglevel=INFO   logger=src.api.production_api _log_with_context() L152  Flushing Langfuse handler for encounter zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:11:55 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Langfuse client initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:12:19 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:12:19 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:12:58 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:12:58 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:12:58 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:12:58 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:01 loglevel=INFO   logger=src.api.production_api _log_with_context() L152  Starting notes generation job notes_zxcv_3ac8226d for encounter zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:01 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Creating Langfuse handler for conversation_id: zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:01 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Langfuse handler created successfully for conversation: zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:01 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Initializing Medical Conversation RAG Service with AWS OpenSearch call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:01 loglevel=INFO   logger=botocore.credentials load() L1213 Found credentials in environment variables. call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/botocore/credentials.py L1213
2025-06-28 13:13:02 loglevel=WARNING logger=opensearch log_request_fail() L280  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_cluster/health [status:404 request:0.642s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L280 
2025-06-28 13:13:02 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Health check endpoint not found, which is normal for AWS OpenSearch Serverless (AOSS). call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:02 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Skipping fallback connection test to allow startup with potentially pending IAM permissions. call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:02 loglevel=INFO   logger=opensearch log_request_success() L258  HEAD https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.197s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:02 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  OpenSearch index 'medical-conversations' already exists call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:02 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Medical Conversation RAG Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:02 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Initializing SNOMED RAG Service with Neo4j GraphRAG call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:03 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Neo4j GraphRAG connection established call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:03 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  SNOMED RAG Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:03 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  Initializing Medical Section Generator call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:03 loglevel=INFO   logger=src.services.pattern_learning _log_with_context() L152  Initializing Pattern Learning Service... call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:03 loglevel=INFO   logger=src.services.pattern_learning _log_with_context() L152  Pattern Learning Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:08 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  All medical services verified and operational call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:08 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  Medical Section Generator initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:08 loglevel=INFO   logger=src.services.notegen_api_service _log_with_context() L152  NoteGen API Integration Service initialized call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:10 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.647s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:10 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.629s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:11 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.175s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:11 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.444s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:11 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.169s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:12 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.348s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:12 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.170s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:13 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.346s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:13 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.173s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:13 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.360s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:14 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.171s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:14 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.349s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:14 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.173s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:15 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.424s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:15 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.173s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:16 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.364s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:16 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.171s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:16 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.327s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:17 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.169s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:17 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.361s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:18 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.197s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:18 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.357s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:18 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.169s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:19 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.380s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:19 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.168s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:19 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.353s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:20 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.168s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:20 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.348s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:21 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.170s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:21 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.377s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:21 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.168s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:22 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.374s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:23 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations/_search [status:200 request:0.255s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:23 loglevel=WARNING logger=src.services.conversation_rag _log_with_context() L152  Could not find a clear consent statement for conversation zxcv using LLM. call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:25 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Getting SNOMED mappings for 17 terms in language: en call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:39 loglevel=INFO   logger=src.api.production_api _log_with_context() L152  Flushing Langfuse handler for encounter zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:40 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Langfuse client initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:46 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:46 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:46 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:46 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:57 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Initializing Medical Conversation RAG Service with AWS OpenSearch call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:57 loglevel=INFO   logger=botocore.credentials load() L1213 Found credentials in environment variables. call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/botocore/credentials.py L1213
2025-06-28 13:13:58 loglevel=WARNING logger=opensearch log_request_fail() L280  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_cluster/health [status:404 request:0.668s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L280 
2025-06-28 13:13:58 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Health check endpoint not found, which is normal for AWS OpenSearch Serverless (AOSS). call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:58 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Skipping fallback connection test to allow startup with potentially pending IAM permissions. call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:58 loglevel=INFO   logger=opensearch log_request_success() L258  HEAD https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.217s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:13:58 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  OpenSearch index 'medical-conversations' already exists call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:58 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Medical Conversation RAG Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:58 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Initializing SNOMED RAG Service with Neo4j GraphRAG call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:58 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Neo4j GraphRAG connection established call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:58 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  SNOMED RAG Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:58 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  Initializing Medical Section Generator call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:58 loglevel=INFO   logger=src.services.pattern_learning _log_with_context() L152  Initializing Pattern Learning Service... call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:13:58 loglevel=INFO   logger=src.services.pattern_learning _log_with_context() L152  Pattern Learning Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:14:03 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  All medical services verified and operational call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:14:03 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  Medical Section Generator initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:14:35 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:14:35 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:14:37 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:14:37 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:14:37 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:14:37 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:14:39 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:14:39 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:14:40 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:14:40 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:14:40 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:14:40 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:14:52 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:14:52 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:14:54 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:14:54 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:14:54 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:14:54 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:14:57 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:14:57 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:14:58 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:14:58 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:14:58 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:14:58 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:15:16 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Initializing Medical Conversation RAG Service with AWS OpenSearch call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:15:16 loglevel=INFO   logger=botocore.credentials load() L1213 Found credentials in environment variables. call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/botocore/credentials.py L1213
2025-06-28 13:15:17 loglevel=WARNING logger=opensearch log_request_fail() L280  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_cluster/health [status:404 request:0.693s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L280 
2025-06-28 13:15:17 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Health check endpoint not found, which is normal for AWS OpenSearch Serverless (AOSS). call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:15:17 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Skipping fallback connection test to allow startup with potentially pending IAM permissions. call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:15:17 loglevel=INFO   logger=opensearch log_request_success() L258  HEAD https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.203s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:15:17 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  OpenSearch index 'medical-conversations' already exists call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:15:17 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Medical Conversation RAG Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:15:17 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Initializing SNOMED RAG Service with Neo4j GraphRAG call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:15:17 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Neo4j GraphRAG connection established call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:15:17 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  SNOMED RAG Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:15:17 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  Initializing Medical Section Generator call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:15:17 loglevel=INFO   logger=src.services.pattern_learning _log_with_context() L152  Initializing Pattern Learning Service... call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:15:17 loglevel=INFO   logger=src.services.pattern_learning _log_with_context() L152  Pattern Learning Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:15:24 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  All medical services verified and operational call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:15:24 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  Medical Section Generator initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:10 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:10 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:13 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:13 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:13 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:13 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:16 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:16 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:16 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:16 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:16 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:16 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:25 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:25 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:27 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:27 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:27 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:27 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:32 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:32 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:33 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:33 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:33 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:33 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:35 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:35 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:36 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:36 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:36 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:36 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:39 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:39 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:41 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:41 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:41 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:41 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:43 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:43 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:44 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:44 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:44 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:44 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:47 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:47 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:49 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:49 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:49 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:49 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:52 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:52 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:53 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:53 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:53 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:53 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:57 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:16:57 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:00 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:00 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:00 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:00 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:05 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:05 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:06 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:06 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:06 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:06 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:09 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:09 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:10 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:10 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:10 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:10 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:12 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:12 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:14 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:14 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:14 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:14 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:14 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:14 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:15 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:15 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:15 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:15 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:20 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:20 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:21 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:21 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:21 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:21 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:22 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:22 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:23 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:23 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:23 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:17:23 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:08 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:08 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:09 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:09 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:09 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:09 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:13 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:13 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:14 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:14 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:14 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:14 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:18 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:18 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:21 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:21 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:21 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:21 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:23 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:23 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:24 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:24 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:24 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:24 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:35 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:35 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:36 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:36 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:36 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:36 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:39 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:39 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:40 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:40 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:40 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:40 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:51 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:51 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:54 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:54 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:54 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:54 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:59 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:18:59 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:00 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:00 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:00 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:00 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:04 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:04 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:05 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:05 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:05 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:05 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:11 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:11 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:13 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:13 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:13 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:13 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:15 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:15 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:16 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:16 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:16 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:16 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:33 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:33 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:34 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:34 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:34 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:34 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:35 loglevel=INFO   logger=src.main _log_with_context() L152  Shutting down NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:35 loglevel=INFO   logger=src.main _log_with_context() L152  All medical encounters completed, system shutdown complete call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:51 loglevel=INFO   logger=src.main _log_with_context() L152  Starting NoteGen AI APIs - Medical Template Extraction System call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:51 loglevel=INFO   logger=src.main _log_with_context() L152  Story Requirements: Multi-template + Long encounters + Line referencing + Multilingual + Hallucination prevention call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:51 loglevel=INFO   logger=src.main _log_with_context() L152  Medical compliance: HIPAA/PIPEDA ready with Canadian data residency call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:51 loglevel=INFO   logger=src.main _log_with_context() L152  System ready for medical encounter processing call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:19:59 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Initializing Medical Conversation RAG Service with AWS OpenSearch call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:20:00 loglevel=INFO   logger=botocore.credentials load() L1213 Found credentials in environment variables. call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/botocore/credentials.py L1213
2025-06-28 13:20:00 loglevel=WARNING logger=opensearch log_request_fail() L280  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_cluster/health [status:404 request:0.704s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L280 
2025-06-28 13:20:00 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Health check endpoint not found, which is normal for AWS OpenSearch Serverless (AOSS). call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:20:00 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Skipping fallback connection test to allow startup with potentially pending IAM permissions. call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:20:00 loglevel=INFO   logger=opensearch log_request_success() L258  HEAD https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.205s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:00 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  OpenSearch index 'medical-conversations' already exists call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:20:00 loglevel=INFO   logger=src.services.conversation_rag _log_with_context() L152  Medical Conversation RAG Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:20:01 loglevel=INFO   logger=opensearch log_request_success() L258  HEAD https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.165s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:01 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Initializing SNOMED RAG Service with Neo4j GraphRAG call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:20:01 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Neo4j GraphRAG connection established call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:20:01 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  SNOMED RAG Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:20:01 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  Initializing Medical Section Generator call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:20:01 loglevel=INFO   logger=src.services.pattern_learning _log_with_context() L152  Initializing Pattern Learning Service... call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:20:01 loglevel=INFO   logger=src.services.pattern_learning _log_with_context() L152  Pattern Learning Service initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:20:06 loglevel=INFO   logger=opensearch log_request_success() L258  HEAD https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.202s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:06 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  All medical services verified and operational call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:20:06 loglevel=INFO   logger=src.services.section_generator _log_with_context() L152  Medical Section Generator initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:20:06 loglevel=INFO   logger=opensearch log_request_success() L258  HEAD https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.204s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:21 loglevel=INFO   logger=src.api.production_api _log_with_context() L152  Starting notes generation job notes_zxcv_7d191fa1 for encounter zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:20:21 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Creating Langfuse handler for conversation_id: zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:20:21 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Langfuse handler created successfully for conversation: zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:20:21 loglevel=INFO   logger=src.services.notegen_api_service _log_with_context() L152  NoteGen API Integration Service initialized call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:20:23 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.663s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:23 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.520s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:24 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.168s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:24 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.486s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:24 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.170s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:25 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.346s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:25 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.171s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:26 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.386s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:26 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.171s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:26 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.501s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:27 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.169s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:27 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.371s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:28 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.167s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:28 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.383s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:28 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.170s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:29 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.365s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:29 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.166s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:30 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.383s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:30 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.169s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:30 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.349s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:31 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.168s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:31 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.352s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:32 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.166s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:32 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.337s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:32 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.166s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:33 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.440s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:33 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.167s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:34 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.377s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:34 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.169s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:35 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.365s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:35 loglevel=INFO   logger=opensearch log_request_success() L258  GET https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations [status:200 request:0.174s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:35 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/_bulk [status:200 request:0.350s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:37 loglevel=INFO   logger=opensearch log_request_success() L258  POST https://9tty40b80t5pqwdeqop6.ca-central-1.aoss.amazonaws.com:443/medical-conversations/_search [status:200 request:0.310s] call_trace=/Users/khalidkhader/Library/Caches/pypoetry/virtualenvs/notegen-ai-apis-9fqjBXSX-py3.13/lib/python3.13/site-packages/opensearchpy/connection/base.py L258 
2025-06-28 13:20:37 loglevel=WARNING logger=src.services.conversation_rag _log_with_context() L152  Could not find a clear consent statement for conversation zxcv using LLM. call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:20:39 loglevel=INFO   logger=src.services.snomed_rag _log_with_context() L152  Getting SNOMED mappings for 17 terms in language: en call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:20:56 loglevel=INFO   logger=src.api.production_api _log_with_context() L152  Flushing Langfuse handler for encounter zxcv call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
2025-06-28 13:20:56 loglevel=INFO   logger=src.core.observability _log_with_context() L152  Langfuse client initialized successfully call_trace=/Users/khalidkhader/Desktop/My Docs/Work/Bitlab/Notegen AI APIs/src/core/logging.py L152 
